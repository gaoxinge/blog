{
    "docs": [
        {
            "location": "/", 
            "text": "\ufeff\u6b64\u535a\u5ba2\u7528\u4e8e\u5b66\u4e60\u8bed\u8a00\u548c\u7b97\u6cd5\u3002\n\n\npython\n\n\n\n\nPython\u6838\u5fc3\u7f16\u7a0b\n\n\nPython\u6e90\u7801\u5256\u6790\n\n\nThe Python Tutorial\n\n\n\n\nc\n\n\n\n\nC Primer Plus\n\n\nC\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\n\n\n\n\nc++\n\n\n\n\nC++ Primer\n\n\n\n\n\u7b97\u6cd5\n\n\n\n\n\u7b97\u6cd5\u5bfc\u8bba\n\n\n\n\n\u7f51\u7ad9\n\n\n\n\n\u725b\u5ba2\u7f51", 
            "title": "\u535a\u5ba2"
        }, 
        {
            "location": "/#python", 
            "text": "Python\u6838\u5fc3\u7f16\u7a0b  Python\u6e90\u7801\u5256\u6790  The Python Tutorial", 
            "title": "python"
        }, 
        {
            "location": "/#c", 
            "text": "C Primer Plus  C\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00", 
            "title": "c"
        }, 
        {
            "location": "/#c_1", 
            "text": "C++ Primer", 
            "title": "c++"
        }, 
        {
            "location": "/#_1", 
            "text": "\u7b97\u6cd5\u5bfc\u8bba", 
            "title": "\u7b97\u6cd5"
        }, 
        {
            "location": "/#_2", 
            "text": "\u725b\u5ba2\u7f51", 
            "title": "\u7f51\u7ad9"
        }, 
        {
            "location": "/index_\u76ee\u5f55/", 
            "text": "\ufeff\u8fd9\u662f\u535a\u5ba2\u7684\u76ee\u5f55\u3002\n\n\npython\n\n\n\n\npython\n\n\n\u7f29\u8fdb\n\n\n\u7f16\u7801\n\n\n\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54\n\n\n\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54\n\n\n\n\nc\n\n\n\n\nc\n\n\n\n\nc++\n\n\n\n\nc++\n\n\n\n\n\u7b97\u6cd5", 
            "title": "\u76ee\u5f55"
        }, 
        {
            "location": "/index_\u76ee\u5f55/#python", 
            "text": "python  \u7f29\u8fdb  \u7f16\u7801  \u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54  \u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54", 
            "title": "python"
        }, 
        {
            "location": "/index_\u76ee\u5f55/#c", 
            "text": "c", 
            "title": "c"
        }, 
        {
            "location": "/index_\u76ee\u5f55/#c_1", 
            "text": "c++", 
            "title": "c++"
        }, 
        {
            "location": "/index_\u76ee\u5f55/#_1", 
            "text": "", 
            "title": "\u7b97\u6cd5"
        }, 
        {
            "location": "/python_\u7f29\u8fdb/", 
            "text": "\ufeffpython\u662f\u4e00\u4e2a\u5f88\u5403\u7f29\u8fdb\u7684\u8bed\u8a00\uff0c\u4ee5\u7a7a\u683c\u548c\u5236\u8868\u7b26\u5f00\u59cb\uff0c\u5fc5\u987b\u4fdd\u6301\u67d0\u79cd\u4e00\u81f4\u6027\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002\u4e0b\u9762\u662f\u76f8\u5173\u672f\u8bed\u7684\u7ffb\u8bd1\n\n\n\n\n\u56de\u8f66/\u6362\u884c\uff1aenter\n\n\n\u7a7a\u683c\uff1aspace\n\n\n\u5236\u8868\u7b26\uff1atab\n\n\n\n\n\u4e0b\u9762\u6211\u4eec\u7814\u7a76\u4e00\u4e0b\u4e0d\u540c\u7f16\u8f91\u5668\u5bf9python\u4ee3\u7801\u7684\u5f71\u54cd\u3002\n\n\n\u7814\u7a76\u65b9\u5f0f\n\n\n\u6211\u4eec\u91c7\u7528\u4e24\u79cd\u7814\u7a76\u65b9\u5f0f\uff0c\u7b2c\u4e00\u79cd\uff0c\u7528\u4e0d\u540c\u7684\u7f16\u8f91\u5668\u5199\u4ee3\u7801\uff0c\u7136\u540e\u7528\u8bb0\u4e8b\u672c\u6253\u5f00\u3002\u7b2c\u4e8c\u79cd\uff0c\u5728python\u4e2d\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\n\n\nwith open('***.py') as f:\n    s = f.read()\n\n\n\n\n\u7f16\u8f91\u5668\n\n\n\u901a\u8fc7\u4e0a\u8ff0\u7814\u7a76\uff0c\u6211\u4eec\u53d1\u73b0\u5f71\u54cd\u4ee3\u7801\u7684\u56e0\u7d20\u4e3b\u8981\u4e3a\u7f16\u8f91\u5668\u63d0\u4f9b\u7684\u81ea\u52a8\u7f29\u8fdb\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5176\u5bf9\u5236\u8868\u7b26\u7684\u89e3\u8bfb\u3002\n\n\n\n\n\u8bb0\u4e8b\u672c\n\n\n\u81ea\u52a8\u7f29\u8fdb\uff1a\u65e0\n\n\n\u8f93\u5165\u5236\u8868\u7b26\uff1a\\t\n\n\n\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c\n\n\nnotepad++\n\n\n\u81ea\u52a8\u7f29\u8fdb\uff1a\\t\n\n\n\u8f93\u5165\u5236\u8868\u7b26\uff1a\\t\n\n\n\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c\n\n\nidle\uff08python\u81ea\u5e26ide\uff09\n\n\n\u81ea\u52a8\u7f29\u8fdb\uff1a\u56db\u4e2a\u7a7a\u683c\n\n\n\u8f93\u5165\u5236\u8868\u7b26\uff1a\u56db\u4e2a\u7a7a\u683c\n\n\n\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\\t\n\n\ncommand line\uff08python\u81ea\u5e26shell\uff09\n\n\n\u81ea\u52a8\u7f29\u8fdb\uff1a\u65e0\n\n\n\u8f93\u5165\u5236\u8868\u7b26\uff1a\\t\n\n\n\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c\n\n\n\n\n\u8f6c\u5316\n\n\n\u8003\u8651\u4e0b\u9762\u4ee3\u7801\n\n\ndef f(a,b):\n    a = 1\n    b = 1\n    return a + b\n\n\n\n\n\n\n\u628anotepad++\u8f6c\u5316\u4e3aidle\n\n\n\n\n\u76f4\u63a5\u8f6c\u5316\u540e\uff0c\u7f16\u8bd1\u4e0d\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a\u6240\u6709\u7f29\u8fdb\u5747\u4e3a\u4e00\u4e2a\u5236\u8868\u7b26\u3002\u4f46\u6211\u4eec\u518d\u8f93\u5165\u5236\u8868\u7b26\uff08\u60c5\u51b5\u4f1a\u5f88\u590d\u6742\uff0c\u6211\u4eec\u5047\u8bbe\u53ea\u6539\u7b2c\u4e8c\u884c\uff09\uff0cidle\u5c06\u65e0\u6cd5\u7f16\u8bd1\uff0c\u56e0\u4e3a\u8fd9\u65f6\u7b2c\u4e8c\u884c\u7f29\u8fdb\u4e3a\u516b\u4e2a\u7a7a\u683c\u3002\u8fdb\u4e00\u6b65\uff0c\u518d\u7528notepad++\u6253\u5f00\uff0c\u53c8\u53ef\u4ee5\u7f16\u8bd1\uff0c\u56e0\u4e3a\u8fd9\u65f6\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\u4e3a\u516b\u4e2a\u7a7a\u683c\u3002\n\n\n\n\n\u628aidle\u8f6c\u5316\u4e3anotepad++\n\n\n\n\n\u76f4\u63a5\u8f6c\u5316\u540e\uff0c\u7f16\u8bd1\u4e0d\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a\u6240\u6709\u7f29\u8fdb\u5747\u4e3a\u56db\u4e2a\u7a7a\u683c\u3002\u4f46\u6211\u4eec\u518d\u8f93\u5165\u5236\u8868\u7b26\uff08\u60c5\u51b5\u6ca1\u90a3\u4e48\u590d\u6742\uff09\uff0cnotepad++\u5c06\u65e0\u6cd5\u7f16\u8bd1\uff0c\u539f\u56e0\u663e\u7136\u3002\u8fdb\u4e00\u6b65\uff0c\u518d\u7528idle\u6253\u5f00\uff0c\u8fd8\u662f\u4e0d\u53ef\u7f16\u8bd1\uff0c\u539f\u56e0\u4ea6\u663e\u7136\u3002\n\n\n\u7ed3\u679c\n\n\n\u7efc\u4e0a\uff0c\u5f71\u54cd\u4ee3\u7801\u6700\u5173\u952e\u7684\u56e0\u7d20\u4e3a\u7f16\u8f91\u5668\u5bf9\u81ea\u52a8\u7f29\u8fdb\u548c\u5236\u8868\u7b26\u7684\u89e3\u8bfb\u4e0d\u540c\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u5c06notepad++\u7684\u81ea\u52a8\u7f29\u8fdb\u548c\u5236\u8868\u7b26\u5747\u8bbe\u7f6e\u6210\u56db\u4e2a\u7a7a\u683c\uff0c\u5177\u4f53\u53c2\u89c1\nNotepad++\u7f16\u8f91Pyhton\u6587\u4ef6\u7684\u81ea\u52a8\u7f29\u8fdb\u7684\u95ee\u9898\uff08\u56fe\u6587\uff09\u66f4\u65b0\u5230v6.7.9.2\n\u3002", 
            "title": "\u7f29\u8fdb"
        }, 
        {
            "location": "/python_\u7f29\u8fdb/#_1", 
            "text": "\u6211\u4eec\u91c7\u7528\u4e24\u79cd\u7814\u7a76\u65b9\u5f0f\uff0c\u7b2c\u4e00\u79cd\uff0c\u7528\u4e0d\u540c\u7684\u7f16\u8f91\u5668\u5199\u4ee3\u7801\uff0c\u7136\u540e\u7528\u8bb0\u4e8b\u672c\u6253\u5f00\u3002\u7b2c\u4e8c\u79cd\uff0c\u5728python\u4e2d\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801  with open('***.py') as f:\n    s = f.read()", 
            "title": "\u7814\u7a76\u65b9\u5f0f"
        }, 
        {
            "location": "/python_\u7f29\u8fdb/#_2", 
            "text": "\u901a\u8fc7\u4e0a\u8ff0\u7814\u7a76\uff0c\u6211\u4eec\u53d1\u73b0\u5f71\u54cd\u4ee3\u7801\u7684\u56e0\u7d20\u4e3b\u8981\u4e3a\u7f16\u8f91\u5668\u63d0\u4f9b\u7684\u81ea\u52a8\u7f29\u8fdb\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5176\u5bf9\u5236\u8868\u7b26\u7684\u89e3\u8bfb\u3002   \u8bb0\u4e8b\u672c  \u81ea\u52a8\u7f29\u8fdb\uff1a\u65e0  \u8f93\u5165\u5236\u8868\u7b26\uff1a\\t  \u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c  notepad++  \u81ea\u52a8\u7f29\u8fdb\uff1a\\t  \u8f93\u5165\u5236\u8868\u7b26\uff1a\\t  \u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c  idle\uff08python\u81ea\u5e26ide\uff09  \u81ea\u52a8\u7f29\u8fdb\uff1a\u56db\u4e2a\u7a7a\u683c  \u8f93\u5165\u5236\u8868\u7b26\uff1a\u56db\u4e2a\u7a7a\u683c  \u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\\t  command line\uff08python\u81ea\u5e26shell\uff09  \u81ea\u52a8\u7f29\u8fdb\uff1a\u65e0  \u8f93\u5165\u5236\u8868\u7b26\uff1a\\t  \u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c", 
            "title": "\u7f16\u8f91\u5668"
        }, 
        {
            "location": "/python_\u7f29\u8fdb/#_3", 
            "text": "\u8003\u8651\u4e0b\u9762\u4ee3\u7801  def f(a,b):\n    a = 1\n    b = 1\n    return a + b   \u628anotepad++\u8f6c\u5316\u4e3aidle   \u76f4\u63a5\u8f6c\u5316\u540e\uff0c\u7f16\u8bd1\u4e0d\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a\u6240\u6709\u7f29\u8fdb\u5747\u4e3a\u4e00\u4e2a\u5236\u8868\u7b26\u3002\u4f46\u6211\u4eec\u518d\u8f93\u5165\u5236\u8868\u7b26\uff08\u60c5\u51b5\u4f1a\u5f88\u590d\u6742\uff0c\u6211\u4eec\u5047\u8bbe\u53ea\u6539\u7b2c\u4e8c\u884c\uff09\uff0cidle\u5c06\u65e0\u6cd5\u7f16\u8bd1\uff0c\u56e0\u4e3a\u8fd9\u65f6\u7b2c\u4e8c\u884c\u7f29\u8fdb\u4e3a\u516b\u4e2a\u7a7a\u683c\u3002\u8fdb\u4e00\u6b65\uff0c\u518d\u7528notepad++\u6253\u5f00\uff0c\u53c8\u53ef\u4ee5\u7f16\u8bd1\uff0c\u56e0\u4e3a\u8fd9\u65f6\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\u4e3a\u516b\u4e2a\u7a7a\u683c\u3002   \u628aidle\u8f6c\u5316\u4e3anotepad++   \u76f4\u63a5\u8f6c\u5316\u540e\uff0c\u7f16\u8bd1\u4e0d\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a\u6240\u6709\u7f29\u8fdb\u5747\u4e3a\u56db\u4e2a\u7a7a\u683c\u3002\u4f46\u6211\u4eec\u518d\u8f93\u5165\u5236\u8868\u7b26\uff08\u60c5\u51b5\u6ca1\u90a3\u4e48\u590d\u6742\uff09\uff0cnotepad++\u5c06\u65e0\u6cd5\u7f16\u8bd1\uff0c\u539f\u56e0\u663e\u7136\u3002\u8fdb\u4e00\u6b65\uff0c\u518d\u7528idle\u6253\u5f00\uff0c\u8fd8\u662f\u4e0d\u53ef\u7f16\u8bd1\uff0c\u539f\u56e0\u4ea6\u663e\u7136\u3002", 
            "title": "\u8f6c\u5316"
        }, 
        {
            "location": "/python_\u7f29\u8fdb/#_4", 
            "text": "\u7efc\u4e0a\uff0c\u5f71\u54cd\u4ee3\u7801\u6700\u5173\u952e\u7684\u56e0\u7d20\u4e3a\u7f16\u8f91\u5668\u5bf9\u81ea\u52a8\u7f29\u8fdb\u548c\u5236\u8868\u7b26\u7684\u89e3\u8bfb\u4e0d\u540c\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u5c06notepad++\u7684\u81ea\u52a8\u7f29\u8fdb\u548c\u5236\u8868\u7b26\u5747\u8bbe\u7f6e\u6210\u56db\u4e2a\u7a7a\u683c\uff0c\u5177\u4f53\u53c2\u89c1 Notepad++\u7f16\u8f91Pyhton\u6587\u4ef6\u7684\u81ea\u52a8\u7f29\u8fdb\u7684\u95ee\u9898\uff08\u56fe\u6587\uff09\u66f4\u65b0\u5230v6.7.9.2 \u3002", 
            "title": "\u7ed3\u679c"
        }, 
        {
            "location": "/python_\u7f16\u7801/", 
            "text": "\ufeff", 
            "title": "\u7f16\u7801"
        }, 
        {
            "location": "/python_python/", 
            "text": "\ufeff\npython\n\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u7531\nGuido van Rossum\n\u64b0\u5199\uff0c\u5e76\u7531\nPython Software Foundation\n\u7ef4\u62a4\u3002\n\n\n\u57fa\u672c\u4fe1\u606f\n\n\npython\u6709\u81ea\u5df1\u7684\n\u5b98\u7f51\n\u548c\nGithub\n\uff0c\u5747\u7531python software foundation\u7ef4\u62a4\u3002\n\n\n\u53d7\u6b22\u8fce\n\n\npython\u4e3a\u4ec0\u4e48\u5982\u6b64\u53d7\u6b22\u8fce\uff1f\u4e3b\u8981\u56e0\u4e3apython\u7b80\u6d01\uff0c\u6613\u8bfb\u7684\u8bed\u8a00\u7279\u6027\uff0c\u4ee5\u53ca\u5f3a\u5927\u7684\u7b2c\u4e09\u65b9\u5e93\u652f\u6301\u3002\n\n\n\u89e3\u91ca\u5668\n\n\npython\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u6bd4\u5982\n\n\n\u89e3\u91ca\u5668                  \u5b9e\u73b0\u8bed\u8a00\nCPython                   C\nPyPy                      Python\nJython                    Java\nBrython                   JavaScript\nRubyPython                Ruby\nIronPython                C#\nMicroPython               ?\n\n\n\n\n\u5176\u4e2dCPython\u662f\u7528\u7684\u6700\u591a\u7684\uff0c\u4e5f\u662f\u5b98\u7f51\u652f\u6301\u7684\u89e3\u91ca\u5668\uff0c\u53ef\u53c2\u89c1\n\u4e3a\u4ec0\u4e48\u6709\u8fd9\u4e48\u591aPython\n\u3002", 
            "title": "python"
        }, 
        {
            "location": "/python_python/#_1", 
            "text": "python\u6709\u81ea\u5df1\u7684 \u5b98\u7f51 \u548c Github \uff0c\u5747\u7531python software foundation\u7ef4\u62a4\u3002", 
            "title": "\u57fa\u672c\u4fe1\u606f"
        }, 
        {
            "location": "/python_python/#_2", 
            "text": "python\u4e3a\u4ec0\u4e48\u5982\u6b64\u53d7\u6b22\u8fce\uff1f\u4e3b\u8981\u56e0\u4e3apython\u7b80\u6d01\uff0c\u6613\u8bfb\u7684\u8bed\u8a00\u7279\u6027\uff0c\u4ee5\u53ca\u5f3a\u5927\u7684\u7b2c\u4e09\u65b9\u5e93\u652f\u6301\u3002", 
            "title": "\u53d7\u6b22\u8fce"
        }, 
        {
            "location": "/python_python/#_3", 
            "text": "python\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u6bd4\u5982  \u89e3\u91ca\u5668                  \u5b9e\u73b0\u8bed\u8a00\nCPython                   C\nPyPy                      Python\nJython                    Java\nBrython                   JavaScript\nRubyPython                Ruby\nIronPython                C#\nMicroPython               ?  \u5176\u4e2dCPython\u662f\u7528\u7684\u6700\u591a\u7684\uff0c\u4e5f\u662f\u5b98\u7f51\u652f\u6301\u7684\u89e3\u91ca\u5668\uff0c\u53ef\u53c2\u89c1 \u4e3a\u4ec0\u4e48\u6709\u8fd9\u4e48\u591aPython \u3002", 
            "title": "\u89e3\u91ca\u5668"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/", 
            "text": "\ufeff\u6574\u7406\u4e86\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54\u3002\n\n\n\n\nPython\u5f00\u53d1\u4e2d\u6709\u54ea\u4e9b\u9ad8\u7ea7\u6280\u5de7\n\n\nPython\u6709\u54ea\u4e9b\u4f18\u96c5\u7684\u4ee3\u7801\u5b9e\u73b0", 
            "title": "\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/", 
            "text": "\ufeff\u6574\u7406\u4e86\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54\u3002\n\n\n\n\n\u600e\u4e48\u6837\u624d\u7b97\u662f\u7cbe\u901aPython\n\n\n\u600e\u6837\u624d\u80fd\u5199\u51fapythonic\u7684\u4ee3\u7801\n\n\nPython\u6709\u54ea\u4e9b\u4f18\u96c5\u7684\u4ee3\u7801\u5b9e\u73b0\n\n\n\n\npython\u4e4b\u7985\n\n\n import this\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n\n\n\n\n\u5207\u7247\n\n\n\u5207\u7247\u64cd\u4f5c\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u6b65\u957f\u3002\n\n\n L = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n L[2:-2]\n[3, 4, 5, 6, 7]\n\n L[-2:2] # \u8868\u793aL[-2:2:1]\n[]\n\n L[-2:2:-1]\n[8, 7, 6, 5, 4]\n\n\n\n\n\u4ea4\u6362\n\n\nBad:\n\n\nt = a\na = b\nb = t\n\n\n\n\nGood:\n\n\na, b = b, a\n\n\n\n\n\u5217\u8868\u63a8\u5bfc\u5f0f\n\n\n [i*i for i in range(1, 21) if i% 2 == 0]\n[4, 16, 36, 64, 100, 144, 196, 256, 324, 400] # \u5217\u8868\n\n {i*i for i in range(1, 21) if i% 2 == 0}\nset([64, 144, 36, 100, 324, 256, 16, 400, 196, 4]) # \u96c6\u5408\n\n {i:i*i for i in range(1, 21) if i% 2 == 0}\n{2: 4, 4: 16, 6: 36, 8: 64, 10: 100, 12: 144, 14: 196, 16: 256, 18: 324, 20: 400} # \u5b57\u5178\n\n[item for item in os.listdir(os.path.expanduser('~')) if os.path.isfile(item)]\n[item for item in os.listdir(os.path.expanduser('~')) if os.path.isdir(item)]\n{item: os.path.realpath(item) for item in os.listdir(os.path.expanduser('~')) if os.path.isdir(item)}\n\n\n\n\n\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\n\n\nBad:\n\n\ntry:\n    f = open('/path/to/file', 'r')\n    print f.read()\nfinally:\n    if f:\n        f.close()\n\n\n\n\nGood:\n\n\nwith open('/path/to/file', 'r') as f:\n    print f.read()\n\n\n\n\n\u88c5\u9970\u5668\n\n\nBad:\n\n\nclass Store(object):\n    def get_food(self, username, food):\n        if username != 'admin':\n            raise Exception(\nThis user is not allowed to get food\n)\n        return self.storage.get(food)\n\n    def put_food(self, username, food):\n        if username != 'admin':\n            raise Exception(\nThis user is not allowed to put food\n)\n        self.storage.put(food)\n\n\n\n\nBetter:\n\n\ndef check_is_admin(username):\n    if username != 'admin':\n        raise Exception(\nThis user is not allowed to get food\n)\n\nclass Store(object):\n    def get_food(self, username, food):\n        check_is_admin(username)\n        return self.storage.get(food)\n\n    def put_food(self, username, food):\n        check_is_admin(username)\n        return self.storage.put(food)\n\n\n\n\nGood:\n\n\ndef check_is_admin(f):\n    def wrapper(*args, **kwargs):\n        if kwargs.get('username') != 'admin':\n            raise Exception(\nThis user is not allowed to get food\n)\n        return f(*arg, **kargs)\n    return wrapper\n\nclass Storage(object):\n    @check_is_admin\n    def get_food(self, username, food):\n        return self.storage.get(food)\n\n    @check_is_admin\n    def put_food(self, username, food):\n        return storage.put(food)\n\n\n\n\n\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\n\n\nBad:\n\n\ndef a():\n    return 'a'\n\ndef b():\n    return 'b'\n\ndef c():\n    return 'c'\n\ncmd = raw_input('\n ')\nif cmd == 'a':\n    print a()\nelif cmd == 'b':\n    print b()\nelif cmd == 'c':\n    print c()\nelse:\n    raise Exception('Action not found')\n\n\n\n\nGood:\n\n\nclass A:\n    def fetch_func(self, action):\n        func= getattr(self, action, None)\n        return func\n\n    def execute(self, action):\n        func= self.fetch_func(action)\n        if func is None:\n            return False\n        return func()\n\n    def a(self):\n        return 'a'\n\n    def b(self, msg):\n        return 'b'\n\n    def c(self, msg):\n        return 'c'\n\ni = A()\ncmd = raw_input('\n ')\nresult = i.execute(cmd)\nif result:\n    print result\nelse:\n    raise Exception('Action not found')", 
            "title": "\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#python", 
            "text": "import this\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!", 
            "title": "python\u4e4b\u7985"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_1", 
            "text": "\u5207\u7247\u64cd\u4f5c\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u6b65\u957f\u3002   L = [1, 2, 3, 4, 5, 6, 7, 8, 9]  L[2:-2]\n[3, 4, 5, 6, 7]  L[-2:2] # \u8868\u793aL[-2:2:1]\n[]  L[-2:2:-1]\n[8, 7, 6, 5, 4]", 
            "title": "\u5207\u7247"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_2", 
            "text": "Bad:  t = a\na = b\nb = t  Good:  a, b = b, a", 
            "title": "\u4ea4\u6362"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_3", 
            "text": "[i*i for i in range(1, 21) if i% 2 == 0]\n[4, 16, 36, 64, 100, 144, 196, 256, 324, 400] # \u5217\u8868  {i*i for i in range(1, 21) if i% 2 == 0}\nset([64, 144, 36, 100, 324, 256, 16, 400, 196, 4]) # \u96c6\u5408  {i:i*i for i in range(1, 21) if i% 2 == 0}\n{2: 4, 4: 16, 6: 36, 8: 64, 10: 100, 12: 144, 14: 196, 16: 256, 18: 324, 20: 400} # \u5b57\u5178\n\n[item for item in os.listdir(os.path.expanduser('~')) if os.path.isfile(item)]\n[item for item in os.listdir(os.path.expanduser('~')) if os.path.isdir(item)]\n{item: os.path.realpath(item) for item in os.listdir(os.path.expanduser('~')) if os.path.isdir(item)}", 
            "title": "\u5217\u8868\u63a8\u5bfc\u5f0f"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_4", 
            "text": "Bad:  try:\n    f = open('/path/to/file', 'r')\n    print f.read()\nfinally:\n    if f:\n        f.close()  Good:  with open('/path/to/file', 'r') as f:\n    print f.read()", 
            "title": "\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_5", 
            "text": "Bad:  class Store(object):\n    def get_food(self, username, food):\n        if username != 'admin':\n            raise Exception( This user is not allowed to get food )\n        return self.storage.get(food)\n\n    def put_food(self, username, food):\n        if username != 'admin':\n            raise Exception( This user is not allowed to put food )\n        self.storage.put(food)  Better:  def check_is_admin(username):\n    if username != 'admin':\n        raise Exception( This user is not allowed to get food )\n\nclass Store(object):\n    def get_food(self, username, food):\n        check_is_admin(username)\n        return self.storage.get(food)\n\n    def put_food(self, username, food):\n        check_is_admin(username)\n        return self.storage.put(food)  Good:  def check_is_admin(f):\n    def wrapper(*args, **kwargs):\n        if kwargs.get('username') != 'admin':\n            raise Exception( This user is not allowed to get food )\n        return f(*arg, **kargs)\n    return wrapper\n\nclass Storage(object):\n    @check_is_admin\n    def get_food(self, username, food):\n        return self.storage.get(food)\n\n    @check_is_admin\n    def put_food(self, username, food):\n        return storage.put(food)", 
            "title": "\u88c5\u9970\u5668"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_6", 
            "text": "Bad:  def a():\n    return 'a'\n\ndef b():\n    return 'b'\n\ndef c():\n    return 'c'\n\ncmd = raw_input('  ')\nif cmd == 'a':\n    print a()\nelif cmd == 'b':\n    print b()\nelif cmd == 'c':\n    print c()\nelse:\n    raise Exception('Action not found')  Good:  class A:\n    def fetch_func(self, action):\n        func= getattr(self, action, None)\n        return func\n\n    def execute(self, action):\n        func= self.fetch_func(action)\n        if func is None:\n            return False\n        return func()\n\n    def a(self):\n        return 'a'\n\n    def b(self, msg):\n        return 'b'\n\n    def c(self, msg):\n        return 'c'\n\ni = A()\ncmd = raw_input('  ')\nresult = i.execute(cmd)\nif result:\n    print result\nelse:\n    raise Exception('Action not found')", 
            "title": "\u52a8\u6001\u7c7b\u578b\u8bed\u8a00"
        }, 
        {
            "location": "/c_c/", 
            "text": "\ufeff", 
            "title": "c"
        }, 
        {
            "location": "/c++_c++/", 
            "text": "\ufeff", 
            "title": "c++"
        }
    ]
}