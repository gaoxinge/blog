{
    "docs": [
        {
            "location": "/", 
            "text": "\ufeff\u6b64\u535a\u5ba2\u7528\u4e8e\u5b66\u4e60\u8bed\u8a00\u548c\u7b97\u6cd5\u3002\n\n\npython\n\n\n\n\nPython\u6838\u5fc3\u7f16\u7a0b\n\n\nPython documentation\n\n\n\n\nc\n\n\n\n\nC Primer Plus\n\n\nC\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\n\n\n\n\nc++\n\n\n\n\nC++ Primer\n\n\n\n\n\u7b97\u6cd5\n\n\n\n\n\u7b97\u6cd5\u5bfc\u8bba\n\n\n\n\n\u7f51\u7ad9\n\n\n\n\n\u725b\u5ba2\u7f51", 
            "title": "\u535a\u5ba2"
        }, 
        {
            "location": "/#python", 
            "text": "Python\u6838\u5fc3\u7f16\u7a0b  Python documentation", 
            "title": "python"
        }, 
        {
            "location": "/#c", 
            "text": "C Primer Plus  C\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00", 
            "title": "c"
        }, 
        {
            "location": "/#c_1", 
            "text": "C++ Primer", 
            "title": "c++"
        }, 
        {
            "location": "/#_1", 
            "text": "\u7b97\u6cd5\u5bfc\u8bba", 
            "title": "\u7b97\u6cd5"
        }, 
        {
            "location": "/#_2", 
            "text": "\u725b\u5ba2\u7f51", 
            "title": "\u7f51\u7ad9"
        }, 
        {
            "location": "/index_\u76ee\u5f55/", 
            "text": "\ufeff\u8fd9\u662f\u535a\u5ba2\u7684\u76ee\u5f55\u3002\n\n\npython\n\n\n\n\npython\n\n\n\u89c4\u8303\n\n\n\u7f29\u8fdb\n\n\n\u7f16\u7801\n\n\n\u6a21\u5757\n\n\n\u5e93\n\n\n\u6807\u51c6\u5e93\n\n\n\u8c03\u8bd5\n\n\n\u6d4b\u8bd5\n\n\nc\n\n\n\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54\n\n\n\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54\n\n\n\n\nc\n\n\n\n\nc\n\n\n\n\nc++\n\n\n\n\nc++\n\n\n\u89c4\u8303\n\n\n\n\n\u7b97\u6cd5", 
            "title": "\u76ee\u5f55"
        }, 
        {
            "location": "/index_\u76ee\u5f55/#python", 
            "text": "python  \u89c4\u8303  \u7f29\u8fdb  \u7f16\u7801  \u6a21\u5757  \u5e93  \u6807\u51c6\u5e93  \u8c03\u8bd5  \u6d4b\u8bd5  c  \u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54  \u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54", 
            "title": "python"
        }, 
        {
            "location": "/index_\u76ee\u5f55/#c", 
            "text": "c", 
            "title": "c"
        }, 
        {
            "location": "/index_\u76ee\u5f55/#c_1", 
            "text": "c++  \u89c4\u8303", 
            "title": "c++"
        }, 
        {
            "location": "/index_\u76ee\u5f55/#_1", 
            "text": "", 
            "title": "\u7b97\u6cd5"
        }, 
        {
            "location": "/python_python/", 
            "text": "\ufeff\npython\n\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u7531\nGuido van Rossum\n\u64b0\u5199\uff0c\u5e76\u7531\nPython Software Foundation\n\u7ef4\u62a4\u3002\n\n\n\u57fa\u672c\u4fe1\u606f\n\n\npython\u6709\u81ea\u5df1\u7684\n\u5b98\u7f51\n\u548c\nGithub\n\uff0c\u5747\u7531python software foundation\u7ef4\u62a4\u3002\n\n\n\u53d7\u6b22\u8fce\n\n\npython\u4e3a\u4ec0\u4e48\u5982\u6b64\u53d7\u6b22\u8fce\uff1f\u4e3b\u8981\u56e0\u4e3apython\u7b80\u6d01\uff0c\u6613\u8bfb\u7684\u8bed\u8a00\u7279\u6027\uff0c\u4ee5\u53ca\u5f3a\u5927\u7684\u7b2c\u4e09\u65b9\u5e93\u652f\u6301\u3002\n\n\n\u89e3\u91ca\u5668\n\n\npython\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u6bd4\u5982\n\n\n\u89e3\u91ca\u5668                  \u5b9e\u73b0\u8bed\u8a00\nCPython                   C\nPyPy                      Python\nJython                    Java\nBrython                   JavaScript\nRubyPython                Ruby\nIronPython                C#\nMicroPython               ?\n\n\n\n\n\u5176\u4e2dCPython\u662f\u7528\u7684\u6700\u591a\u7684\uff0c\u4e5f\u662f\u5b98\u7f51\u652f\u6301\u7684\u89e3\u91ca\u5668\uff0c\u53ef\u53c2\u89c1\n\u4e3a\u4ec0\u4e48\u6709\u8fd9\u4e48\u591aPython\n\u3002\n\n\n\u5b89\u88c5\n\n\n\n\npython\n\n\nidle\uff1apython\u81ea\u5e26\u7684ide\n\n\ncommand line\uff1apython\u81ea\u5e26\u7684\u4ea4\u4e92\n\n\npywin32\n\n\n\u6211\u7684\u914d\u7f6e\n\n\n\u89e3\u91ca\u5668\n\n\n\u7f16\u8f91\u5668", 
            "title": "python"
        }, 
        {
            "location": "/python_python/#_1", 
            "text": "python\u6709\u81ea\u5df1\u7684 \u5b98\u7f51 \u548c Github \uff0c\u5747\u7531python software foundation\u7ef4\u62a4\u3002", 
            "title": "\u57fa\u672c\u4fe1\u606f"
        }, 
        {
            "location": "/python_python/#_2", 
            "text": "python\u4e3a\u4ec0\u4e48\u5982\u6b64\u53d7\u6b22\u8fce\uff1f\u4e3b\u8981\u56e0\u4e3apython\u7b80\u6d01\uff0c\u6613\u8bfb\u7684\u8bed\u8a00\u7279\u6027\uff0c\u4ee5\u53ca\u5f3a\u5927\u7684\u7b2c\u4e09\u65b9\u5e93\u652f\u6301\u3002", 
            "title": "\u53d7\u6b22\u8fce"
        }, 
        {
            "location": "/python_python/#_3", 
            "text": "python\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u6bd4\u5982  \u89e3\u91ca\u5668                  \u5b9e\u73b0\u8bed\u8a00\nCPython                   C\nPyPy                      Python\nJython                    Java\nBrython                   JavaScript\nRubyPython                Ruby\nIronPython                C#\nMicroPython               ?  \u5176\u4e2dCPython\u662f\u7528\u7684\u6700\u591a\u7684\uff0c\u4e5f\u662f\u5b98\u7f51\u652f\u6301\u7684\u89e3\u91ca\u5668\uff0c\u53ef\u53c2\u89c1 \u4e3a\u4ec0\u4e48\u6709\u8fd9\u4e48\u591aPython \u3002", 
            "title": "\u89e3\u91ca\u5668"
        }, 
        {
            "location": "/python_python/#_4", 
            "text": "python  idle\uff1apython\u81ea\u5e26\u7684ide  command line\uff1apython\u81ea\u5e26\u7684\u4ea4\u4e92  pywin32  \u6211\u7684\u914d\u7f6e  \u89e3\u91ca\u5668  \u7f16\u8f91\u5668", 
            "title": "\u5b89\u88c5"
        }, 
        {
            "location": "/python_\u89c4\u8303/", 
            "text": "\ufeff\u4e0b\u9762\u6211\u4eec\u7814\u7a76\u4e00\u4e0bpython\u7684\u98ce\u683c\u89c4\u8303\u3002\n\n\nPython Enhancement Proposal\n\n\n\u8fd9\u5c31\u662f\u6211\u4eec\u719f\u6089\u7684\nPEP\n\u3002\n\n\nPEP 0\n\n\nPEP 0\n\uff0c\u5373Index of Python Enhancement Proposals\uff0c\u4e3aPEP\u7684\u76ee\u5f55\u3002\n\n\nPEP 7\n\n\nPEP  7\n\uff0c\u5373CPython\u7684c\u4ee3\u7801\u98ce\u683c\u89c4\u8303\u3002\n\n\nPEP 8\n\n\nPEP 8\n\uff0c\u5373python\u7684\u4ee3\u7801\u98ce\u683c\u89c4\u8303\uff0c\u5177\u4f53\u53ef\u53c2\u89c1\n\n\n\n\nStyle Guide for Python Code\n\n\npython\u4ee3\u7801\u98ce\u683c\u6307\u5357\n\n\nPython \u7f16\u7801\u98ce\u683c\u6307\u5357\n\n\n\n\nPEP 20\n\n\nPEP 20\n\uff0c\u5373\u8457\u540d\u7684python\u4e4b\u7985\u3002\n\n\n import this\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n\n \n\n # \u4f60\u8fd8\u53ef\u4ee5\u5c1d\u8bd5\u4e0b\u9762\u8fd9\u53e5\n\n import antigravity\n\n\n\n\nGoogle\u5f00\u6e90\u9879\u76ee\u98ce\u683c\u6307\u5357\n\n\nGoogle Style Guide\n\u662fGoogel\u4e3a\u4e00\u4e9b\u8bed\u8a00\u5b9a\u5236\u7684\u98ce\u683c\u89c4\u8303\uff0c\u6bd4\u5982python\u3002", 
            "title": "\u89c4\u8303"
        }, 
        {
            "location": "/python_\u89c4\u8303/#python-enhancement-proposal", 
            "text": "\u8fd9\u5c31\u662f\u6211\u4eec\u719f\u6089\u7684 PEP \u3002", 
            "title": "Python Enhancement Proposal"
        }, 
        {
            "location": "/python_\u89c4\u8303/#pep-0", 
            "text": "PEP 0 \uff0c\u5373Index of Python Enhancement Proposals\uff0c\u4e3aPEP\u7684\u76ee\u5f55\u3002", 
            "title": "PEP 0"
        }, 
        {
            "location": "/python_\u89c4\u8303/#pep-7", 
            "text": "PEP  7 \uff0c\u5373CPython\u7684c\u4ee3\u7801\u98ce\u683c\u89c4\u8303\u3002", 
            "title": "PEP 7"
        }, 
        {
            "location": "/python_\u89c4\u8303/#pep-8", 
            "text": "PEP 8 \uff0c\u5373python\u7684\u4ee3\u7801\u98ce\u683c\u89c4\u8303\uff0c\u5177\u4f53\u53ef\u53c2\u89c1   Style Guide for Python Code  python\u4ee3\u7801\u98ce\u683c\u6307\u5357  Python \u7f16\u7801\u98ce\u683c\u6307\u5357", 
            "title": "PEP 8"
        }, 
        {
            "location": "/python_\u89c4\u8303/#pep-20", 
            "text": "PEP 20 \uff0c\u5373\u8457\u540d\u7684python\u4e4b\u7985\u3002   import this\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!    # \u4f60\u8fd8\u53ef\u4ee5\u5c1d\u8bd5\u4e0b\u9762\u8fd9\u53e5  import antigravity", 
            "title": "PEP 20"
        }, 
        {
            "location": "/python_\u89c4\u8303/#google", 
            "text": "Google Style Guide \u662fGoogel\u4e3a\u4e00\u4e9b\u8bed\u8a00\u5b9a\u5236\u7684\u98ce\u683c\u89c4\u8303\uff0c\u6bd4\u5982python\u3002", 
            "title": "Google\u5f00\u6e90\u9879\u76ee\u98ce\u683c\u6307\u5357"
        }, 
        {
            "location": "/python_\u7f29\u8fdb/", 
            "text": "\ufeffpython\u662f\u4e00\u4e2a\u5f88\u5403\u7f29\u8fdb\u7684\u8bed\u8a00\uff0c\u4ee5\u7a7a\u683c\u548c\u5236\u8868\u7b26\u5f00\u59cb\uff0c\u5fc5\u987b\u4fdd\u6301\u67d0\u79cd\u4e00\u81f4\u6027\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002\u4e0b\u9762\u662f\u76f8\u5173\u672f\u8bed\u7684\u7ffb\u8bd1\n\n\n\n\n\u56de\u8f66/\u6362\u884c\uff1aenter\n\n\n\u7a7a\u683c\uff1aspace\n\n\n\u5236\u8868\u7b26\uff1atab\n\n\n\n\n\u4e0b\u9762\u6211\u4eec\u7814\u7a76\u4e00\u4e0b\u4e0d\u540c\u7f16\u8f91\u5668\u5bf9python\u4ee3\u7801\u7684\u5f71\u54cd\u3002\n\n\n\u7814\u7a76\u65b9\u5f0f\n\n\n\u6211\u4eec\u91c7\u7528\u4e24\u79cd\u7814\u7a76\u65b9\u5f0f\uff0c\u7b2c\u4e00\u79cd\uff0c\u7528\u4e0d\u540c\u7684\u7f16\u8f91\u5668\u5199\u4ee3\u7801\uff0c\u7136\u540e\u7528\u8bb0\u4e8b\u672c\u6253\u5f00\u3002\u7b2c\u4e8c\u79cd\uff0c\u5728python\u4e2d\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\n\n\nwith open('***.py') as f:\n    s = f.read()\n\n\n\n\n\u7f16\u8f91\u5668\n\n\n\u901a\u8fc7\u4e0a\u8ff0\u7814\u7a76\uff0c\u6211\u4eec\u53d1\u73b0\u5f71\u54cd\u4ee3\u7801\u7684\u56e0\u7d20\u4e3b\u8981\u4e3a\u7f16\u8f91\u5668\u63d0\u4f9b\u7684\u81ea\u52a8\u7f29\u8fdb\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5176\u5bf9\u5236\u8868\u7b26\u7684\u89e3\u8bfb\u3002\n\n\n\n\n\u8bb0\u4e8b\u672c\n\n\n\u81ea\u52a8\u7f29\u8fdb\uff1a\u65e0\n\n\n\u8f93\u5165\u5236\u8868\u7b26\uff1a\\t\n\n\n\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c\n\n\nnotepad++\n\n\n\u81ea\u52a8\u7f29\u8fdb\uff1a\\t\n\n\n\u8f93\u5165\u5236\u8868\u7b26\uff1a\\t\n\n\n\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c\n\n\nidle\uff08python\u81ea\u5e26ide\uff09\n\n\n\u81ea\u52a8\u7f29\u8fdb\uff1a\u56db\u4e2a\u7a7a\u683c\n\n\n\u8f93\u5165\u5236\u8868\u7b26\uff1a\u56db\u4e2a\u7a7a\u683c\n\n\n\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\\t\n\n\ncommand line\uff08python\u81ea\u5e26shell\uff09\n\n\n\u81ea\u52a8\u7f29\u8fdb\uff1a\u65e0\n\n\n\u8f93\u5165\u5236\u8868\u7b26\uff1a\\t\n\n\n\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c\n\n\n\n\n\u8f6c\u5316\n\n\n\u8003\u8651\u4e0b\u9762\u4ee3\u7801\n\n\ndef f(a,b):\n    a = 1\n    b = 1\n    return a + b\n\n\n\n\n\n\n\u628anotepad++\u8f6c\u5316\u4e3aidle\n\n\n\n\n\u76f4\u63a5\u8f6c\u5316\u540e\uff0c\u7f16\u8bd1\u4e0d\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a\u6240\u6709\u7f29\u8fdb\u5747\u4e3a\u4e00\u4e2a\u5236\u8868\u7b26\u3002\u4f46\u6211\u4eec\u518d\u8f93\u5165\u5236\u8868\u7b26\uff08\u60c5\u51b5\u4f1a\u5f88\u590d\u6742\uff0c\u6211\u4eec\u5047\u8bbe\u53ea\u6539\u7b2c\u4e8c\u884c\uff09\uff0cidle\u5c06\u65e0\u6cd5\u7f16\u8bd1\uff0c\u56e0\u4e3a\u8fd9\u65f6\u7b2c\u4e8c\u884c\u7f29\u8fdb\u4e3a\u516b\u4e2a\u7a7a\u683c\u3002\u8fdb\u4e00\u6b65\uff0c\u518d\u7528notepad++\u6253\u5f00\uff0c\u53c8\u53ef\u4ee5\u7f16\u8bd1\uff0c\u56e0\u4e3a\u8fd9\u65f6\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\u4e3a\u516b\u4e2a\u7a7a\u683c\u3002\n\n\n\n\n\u628aidle\u8f6c\u5316\u4e3anotepad++\n\n\n\n\n\u76f4\u63a5\u8f6c\u5316\u540e\uff0c\u7f16\u8bd1\u4e0d\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a\u6240\u6709\u7f29\u8fdb\u5747\u4e3a\u56db\u4e2a\u7a7a\u683c\u3002\u4f46\u6211\u4eec\u518d\u8f93\u5165\u5236\u8868\u7b26\uff08\u60c5\u51b5\u6ca1\u90a3\u4e48\u590d\u6742\uff09\uff0cnotepad++\u5c06\u65e0\u6cd5\u7f16\u8bd1\uff0c\u539f\u56e0\u663e\u7136\u3002\u8fdb\u4e00\u6b65\uff0c\u518d\u7528idle\u6253\u5f00\uff0c\u8fd8\u662f\u4e0d\u53ef\u7f16\u8bd1\uff0c\u539f\u56e0\u4ea6\u663e\u7136\u3002\n\n\n\u7ed3\u679c\n\n\n\u7efc\u4e0a\uff0c\u5f71\u54cd\u4ee3\u7801\u6700\u5173\u952e\u7684\u56e0\u7d20\u4e3a\u7f16\u8f91\u5668\u5bf9\u81ea\u52a8\u7f29\u8fdb\u548c\u5236\u8868\u7b26\u7684\u89e3\u8bfb\u4e0d\u540c\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u5c06notepad++\u7684\u81ea\u52a8\u7f29\u8fdb\u548c\u5236\u8868\u7b26\u5747\u8bbe\u7f6e\u6210\u56db\u4e2a\u7a7a\u683c\uff0c\u5177\u4f53\u53c2\u89c1\nNotepad++\u7f16\u8f91Pyhton\u6587\u4ef6\u7684\u81ea\u52a8\u7f29\u8fdb\u7684\u95ee\u9898\uff08\u56fe\u6587\uff09\u66f4\u65b0\u5230v6.7.9.2\n\u3002", 
            "title": "\u7f29\u8fdb"
        }, 
        {
            "location": "/python_\u7f29\u8fdb/#_1", 
            "text": "\u6211\u4eec\u91c7\u7528\u4e24\u79cd\u7814\u7a76\u65b9\u5f0f\uff0c\u7b2c\u4e00\u79cd\uff0c\u7528\u4e0d\u540c\u7684\u7f16\u8f91\u5668\u5199\u4ee3\u7801\uff0c\u7136\u540e\u7528\u8bb0\u4e8b\u672c\u6253\u5f00\u3002\u7b2c\u4e8c\u79cd\uff0c\u5728python\u4e2d\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801  with open('***.py') as f:\n    s = f.read()", 
            "title": "\u7814\u7a76\u65b9\u5f0f"
        }, 
        {
            "location": "/python_\u7f29\u8fdb/#_2", 
            "text": "\u901a\u8fc7\u4e0a\u8ff0\u7814\u7a76\uff0c\u6211\u4eec\u53d1\u73b0\u5f71\u54cd\u4ee3\u7801\u7684\u56e0\u7d20\u4e3b\u8981\u4e3a\u7f16\u8f91\u5668\u63d0\u4f9b\u7684\u81ea\u52a8\u7f29\u8fdb\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5176\u5bf9\u5236\u8868\u7b26\u7684\u89e3\u8bfb\u3002   \u8bb0\u4e8b\u672c  \u81ea\u52a8\u7f29\u8fdb\uff1a\u65e0  \u8f93\u5165\u5236\u8868\u7b26\uff1a\\t  \u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c  notepad++  \u81ea\u52a8\u7f29\u8fdb\uff1a\\t  \u8f93\u5165\u5236\u8868\u7b26\uff1a\\t  \u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c  idle\uff08python\u81ea\u5e26ide\uff09  \u81ea\u52a8\u7f29\u8fdb\uff1a\u56db\u4e2a\u7a7a\u683c  \u8f93\u5165\u5236\u8868\u7b26\uff1a\u56db\u4e2a\u7a7a\u683c  \u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\\t  command line\uff08python\u81ea\u5e26shell\uff09  \u81ea\u52a8\u7f29\u8fdb\uff1a\u65e0  \u8f93\u5165\u5236\u8868\u7b26\uff1a\\t  \u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\uff1a\u516b\u4e2a\u7a7a\u683c", 
            "title": "\u7f16\u8f91\u5668"
        }, 
        {
            "location": "/python_\u7f29\u8fdb/#_3", 
            "text": "\u8003\u8651\u4e0b\u9762\u4ee3\u7801  def f(a,b):\n    a = 1\n    b = 1\n    return a + b   \u628anotepad++\u8f6c\u5316\u4e3aidle   \u76f4\u63a5\u8f6c\u5316\u540e\uff0c\u7f16\u8bd1\u4e0d\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a\u6240\u6709\u7f29\u8fdb\u5747\u4e3a\u4e00\u4e2a\u5236\u8868\u7b26\u3002\u4f46\u6211\u4eec\u518d\u8f93\u5165\u5236\u8868\u7b26\uff08\u60c5\u51b5\u4f1a\u5f88\u590d\u6742\uff0c\u6211\u4eec\u5047\u8bbe\u53ea\u6539\u7b2c\u4e8c\u884c\uff09\uff0cidle\u5c06\u65e0\u6cd5\u7f16\u8bd1\uff0c\u56e0\u4e3a\u8fd9\u65f6\u7b2c\u4e8c\u884c\u7f29\u8fdb\u4e3a\u516b\u4e2a\u7a7a\u683c\u3002\u8fdb\u4e00\u6b65\uff0c\u518d\u7528notepad++\u6253\u5f00\uff0c\u53c8\u53ef\u4ee5\u7f16\u8bd1\uff0c\u56e0\u4e3a\u8fd9\u65f6\u7f16\u8bd1\u65f6\u7684\u5236\u8868\u7b26\u4e3a\u516b\u4e2a\u7a7a\u683c\u3002   \u628aidle\u8f6c\u5316\u4e3anotepad++   \u76f4\u63a5\u8f6c\u5316\u540e\uff0c\u7f16\u8bd1\u4e0d\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3a\u6240\u6709\u7f29\u8fdb\u5747\u4e3a\u56db\u4e2a\u7a7a\u683c\u3002\u4f46\u6211\u4eec\u518d\u8f93\u5165\u5236\u8868\u7b26\uff08\u60c5\u51b5\u6ca1\u90a3\u4e48\u590d\u6742\uff09\uff0cnotepad++\u5c06\u65e0\u6cd5\u7f16\u8bd1\uff0c\u539f\u56e0\u663e\u7136\u3002\u8fdb\u4e00\u6b65\uff0c\u518d\u7528idle\u6253\u5f00\uff0c\u8fd8\u662f\u4e0d\u53ef\u7f16\u8bd1\uff0c\u539f\u56e0\u4ea6\u663e\u7136\u3002", 
            "title": "\u8f6c\u5316"
        }, 
        {
            "location": "/python_\u7f29\u8fdb/#_4", 
            "text": "\u7efc\u4e0a\uff0c\u5f71\u54cd\u4ee3\u7801\u6700\u5173\u952e\u7684\u56e0\u7d20\u4e3a\u7f16\u8f91\u5668\u5bf9\u81ea\u52a8\u7f29\u8fdb\u548c\u5236\u8868\u7b26\u7684\u89e3\u8bfb\u4e0d\u540c\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u5c06notepad++\u7684\u81ea\u52a8\u7f29\u8fdb\u548c\u5236\u8868\u7b26\u5747\u8bbe\u7f6e\u6210\u56db\u4e2a\u7a7a\u683c\uff0c\u5177\u4f53\u53c2\u89c1 Notepad++\u7f16\u8f91Pyhton\u6587\u4ef6\u7684\u81ea\u52a8\u7f29\u8fdb\u7684\u95ee\u9898\uff08\u56fe\u6587\uff09\u66f4\u65b0\u5230v6.7.9.2 \u3002", 
            "title": "\u7ed3\u679c"
        }, 
        {
            "location": "/python_\u7f16\u7801/", 
            "text": "\ufeff", 
            "title": "\u7f16\u7801"
        }, 
        {
            "location": "/python_\u6a21\u5757/", 
            "text": "\ufeff", 
            "title": "\u6a21\u5757"
        }, 
        {
            "location": "/python_\u5e93/", 
            "text": "\ufeffpython\u5982\u6b64\u53d7\u6b22\u8fce\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u56e0\u662f\u5f3a\u5927\u7684\u7b2c\u4e09\u65b9\u5e93\u652f\u6301\u3002\n\n\n\u7ba1\u7406\n\n\nGithub\u4e0a\u7684\npypa\n\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u5173\u5305\u7684\u6307\u5357\nPython Packaging User Guide\n\u3002\u53e6\u5916\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b98\u7f51\u7684\nPyPI\n\u67e5\u770b\u7b2c\u4e09\u65b9\u5305\u7684\u4fe1\u606f\u3002\u5176\u4e2d\u8bb8\u591a\u5305\u662f\u6258\u7ba1\u5728\nGithub\n\u4e0a\u7684\uff0c\u6bd4\u5982\nKenneth Reitz\n\u4e0b\u7684\u8bb8\u591a\u4ed3\u5e93\u3002\n\n\n\u5305\u7684\u7ba1\u7406\u57fa\u672c\u5206\u4e3a\u4ee5\u4e0b\u516b\u4e2a\u6b65\u9aa4\uff1a\n\n\n\n\n\u6253\u5305\n\n\n\u53d1\u5e03\n\n\n\u4e0b\u8f7d\n\n\n\u5b89\u88c5\n\n\n\u5347\u7ea7\n\n\n\u5378\u8f7d\n\n\n\u67e5\u770b\n\n\n\u4f7f\u7528\n\n\n\n\n\u5de5\u5177\n\n\npython\u6709\u8bb8\u591a\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u5e38\u7528\u7684\u6709distutils\uff0csetuptools\u548cpip\uff0c\u53e6\u5916\nPython\u5305\u7ba1\u7406\u5de5\u5177\u89e3\u60d1\n\u89e3\u91ca\u4e86\u7ba1\u7406\u5de5\u5177\u95f4\u7684\u533a\u522b\u3002\n\n\n\u5b89\u88c5\n\n\n\u5177\u4f53\u53ef\u53c2\u89c1\nwindows\u4e0b\u9762\u5b89\u88c5Python\u548cpip\u7ec8\u6781\u6559\u7a0b\n\u3002\n\n\ndistutils\u548csetuptools\n\n\n\n\n\u6587\u6863\n\n\n\u6587\u6863\n\n\n\u5e38\u7528\u547d\u4ee4\n\n\n\n\n# \u6253\u5305\npython setup.py sdist         # tar.gz\npython setup.py bdist_egg     # egg\npython setup.py bdist_rpm     # rpm\npython setup.py bsist_wininst # exe\n\n# \u5b89\u88c5\npython setup.py install\n\n\n\n\npip\n\n\n\n\n\u6587\u6863\n\n\n\u5e38\u7528\u547d\u4ee4\n\n\n\n\n# \u4e0b\u8f7d\uff0c\u5b89\u88c5\uff0c\u5347\u7ea7\u548c\u5378\u8f7d\npip install requests           # \u4e0b\u8f7d\u548c\u5b89\u88c5\npip install --upgrade requests # \u5347\u7ea7\npip uninstall requests         # \u5378\u8f7d \n\n# \u67e5\u770b\npip list\npip list --outdated\n\n\n\n\n\u6253\u5305\u548c\u53d1\u5e03\n\n\n\u5177\u4f53\u53ef\u53c2\u89c1\u4ee5\u4e0b\u4e09\u7bc7\u6587\u7ae0:\n\n\n\n\n\u5173\u4e8epython\u4e2d\u7684setup.py\n\n\nPython\u5305\u7ba1\u7406\u5de5\u5177\u89e3\u60d1\n\n\n\u5c06\u81ea\u5df1\u5199\u7684Python\u4ee3\u7801\u6253\u5305\u653e\u5230PyPI\u4e0a\n\n\n\n\n\u4e0b\u8f7d\uff0c\u5b89\u88c5\uff0c\u5347\u7ea7\u548c\u5378\u8f7d\n\n\n\u7531\u4e8eWindows\u7528\u6237\u5728\u4f7f\u7528python\u65f6\uff0c\u53ef\u80fd\u4f1a\u56e0Windows\u7684\u7279\u6709\u5c5e\u6027\uff08C/C++\uff09\u5bfc\u81f4\u5305\u7684\u5b89\u88c5\u5931\u8d25\uff0c\u56e0\u6b64\u53ef\u53c2\u8003\u4e0b\u5217\u8d44\u6e90\uff1a\n\n\n\n\nMicrosoft Visual C++ Compiler for Python 2.7\n\uff1apython\u7684cl\u7f16\u8bd1\u5668\n\n\nPython for Windows Extensions\n\uff1apython\u5728Windows\u4e0b\u7684\u7cfb\u7edf\u7f16\u7a0b\n\n\nUnofficial Windows Binaries for Python Extension Packages\n\uff1a\u4e00\u4e9b\u96c6\u6210\u597d\u7684wheel", 
            "title": "\u5e93"
        }, 
        {
            "location": "/python_\u5e93/#_1", 
            "text": "Github\u4e0a\u7684 pypa \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u5173\u5305\u7684\u6307\u5357 Python Packaging User Guide \u3002\u53e6\u5916\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b98\u7f51\u7684 PyPI \u67e5\u770b\u7b2c\u4e09\u65b9\u5305\u7684\u4fe1\u606f\u3002\u5176\u4e2d\u8bb8\u591a\u5305\u662f\u6258\u7ba1\u5728 Github \u4e0a\u7684\uff0c\u6bd4\u5982 Kenneth Reitz \u4e0b\u7684\u8bb8\u591a\u4ed3\u5e93\u3002  \u5305\u7684\u7ba1\u7406\u57fa\u672c\u5206\u4e3a\u4ee5\u4e0b\u516b\u4e2a\u6b65\u9aa4\uff1a   \u6253\u5305  \u53d1\u5e03  \u4e0b\u8f7d  \u5b89\u88c5  \u5347\u7ea7  \u5378\u8f7d  \u67e5\u770b  \u4f7f\u7528", 
            "title": "\u7ba1\u7406"
        }, 
        {
            "location": "/python_\u5e93/#_2", 
            "text": "python\u6709\u8bb8\u591a\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u5e38\u7528\u7684\u6709distutils\uff0csetuptools\u548cpip\uff0c\u53e6\u5916 Python\u5305\u7ba1\u7406\u5de5\u5177\u89e3\u60d1 \u89e3\u91ca\u4e86\u7ba1\u7406\u5de5\u5177\u95f4\u7684\u533a\u522b\u3002", 
            "title": "\u5de5\u5177"
        }, 
        {
            "location": "/python_\u5e93/#_3", 
            "text": "\u5177\u4f53\u53ef\u53c2\u89c1 windows\u4e0b\u9762\u5b89\u88c5Python\u548cpip\u7ec8\u6781\u6559\u7a0b \u3002", 
            "title": "\u5b89\u88c5"
        }, 
        {
            "location": "/python_\u5e93/#distutilssetuptools", 
            "text": "\u6587\u6863  \u6587\u6863  \u5e38\u7528\u547d\u4ee4   # \u6253\u5305\npython setup.py sdist         # tar.gz\npython setup.py bdist_egg     # egg\npython setup.py bdist_rpm     # rpm\npython setup.py bsist_wininst # exe\n\n# \u5b89\u88c5\npython setup.py install", 
            "title": "distutils\u548csetuptools"
        }, 
        {
            "location": "/python_\u5e93/#pip", 
            "text": "\u6587\u6863  \u5e38\u7528\u547d\u4ee4   # \u4e0b\u8f7d\uff0c\u5b89\u88c5\uff0c\u5347\u7ea7\u548c\u5378\u8f7d\npip install requests           # \u4e0b\u8f7d\u548c\u5b89\u88c5\npip install --upgrade requests # \u5347\u7ea7\npip uninstall requests         # \u5378\u8f7d \n\n# \u67e5\u770b\npip list\npip list --outdated", 
            "title": "pip"
        }, 
        {
            "location": "/python_\u5e93/#_4", 
            "text": "\u5177\u4f53\u53ef\u53c2\u89c1\u4ee5\u4e0b\u4e09\u7bc7\u6587\u7ae0:   \u5173\u4e8epython\u4e2d\u7684setup.py  Python\u5305\u7ba1\u7406\u5de5\u5177\u89e3\u60d1  \u5c06\u81ea\u5df1\u5199\u7684Python\u4ee3\u7801\u6253\u5305\u653e\u5230PyPI\u4e0a", 
            "title": "\u6253\u5305\u548c\u53d1\u5e03"
        }, 
        {
            "location": "/python_\u5e93/#_5", 
            "text": "\u7531\u4e8eWindows\u7528\u6237\u5728\u4f7f\u7528python\u65f6\uff0c\u53ef\u80fd\u4f1a\u56e0Windows\u7684\u7279\u6709\u5c5e\u6027\uff08C/C++\uff09\u5bfc\u81f4\u5305\u7684\u5b89\u88c5\u5931\u8d25\uff0c\u56e0\u6b64\u53ef\u53c2\u8003\u4e0b\u5217\u8d44\u6e90\uff1a   Microsoft Visual C++ Compiler for Python 2.7 \uff1apython\u7684cl\u7f16\u8bd1\u5668  Python for Windows Extensions \uff1apython\u5728Windows\u4e0b\u7684\u7cfb\u7edf\u7f16\u7a0b  Unofficial Windows Binaries for Python Extension Packages \uff1a\u4e00\u4e9b\u96c6\u6210\u597d\u7684wheel", 
            "title": "\u4e0b\u8f7d\uff0c\u5b89\u88c5\uff0c\u5347\u7ea7\u548c\u5378\u8f7d"
        }, 
        {
            "location": "/python_\u6807\u51c6\u5e93/", 
            "text": "\ufeff", 
            "title": "\u6807\u51c6\u5e93"
        }, 
        {
            "location": "/python_\u8c03\u8bd5/", 
            "text": "\ufeffpython\u8c03\u8bd5\u65b9\u6cd5\u5206\u4e3a\u4e09\u79cd\uff1a\n\n\n\n\n\u4f7f\u7528print\uff0cassert\n\n\n\u4f7f\u7528\u6a21\u5757logging\uff0cpdb\n\n\n\u57fa\u4e8e\u7f16\u8f91\u5668\uff0c\u5982PyCharm\n\n\n\n\n\u5177\u4f53\u65b9\u6cd5\u53ef\u53c2\u89c1\uff1a\n\n\n\n\nPython \u7a0b\u5e8f\u5982\u4f55\u9ad8\u6548\u5730\u8c03\u8bd5\n\n\nPython \u4ee3\u7801\u8c03\u8bd5\u6280\u5de7", 
            "title": "\u8c03\u8bd5"
        }, 
        {
            "location": "/python_\u6d4b\u8bd5/", 
            "text": "\ufeffpython\u6d4b\u8bd5\u65b9\u6cd5\u5206\u4e3a\u4e24\u79cd\uff1a\n\n\n\n\n\u5355\u5143\u6d4b\u8bd5\n\n\n\u6587\u6863\u6d4b\u8bd5\n\n\n\n\n\u5177\u4f53\u65b9\u6cd5\u53ef\u53c2\u89c1\uff1a\n\n\n\n\n\u5355\u5143\u6d4b\u8bd5\n\n\n\u6587\u6863\u6d4b\u8bd5", 
            "title": "\u6d4b\u8bd5"
        }, 
        {
            "location": "/python_c/", 
            "text": "\ufeff", 
            "title": "c"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/", 
            "text": "\ufeff\u6574\u7406\u4e86\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54\u3002\n\n\n\n\nPython\u5f00\u53d1\u4e2d\u6709\u54ea\u4e9b\u9ad8\u7ea7\u6280\u5de7\n\n\nPython\u6709\u54ea\u4e9b\u4f18\u96c5\u7684\u4ee3\u7801\u5b9e\u73b0\n\n\n\n\n\u76f4\u5230\u627e\u5230\u7b26\u5408\u7684\u7ed3\u679c\n\n\nBad:\n\n\na = -1\nfor i in range(1, 10):\n    if not i % 4:\n        a = i\n        break\n\n\n\n\nGood:\n\n\na = next((i for i in range(1, 10) if not i % 4), -1)\n\n\n\n\n\u76f4\u5230\u51fa\u73b0\u4e0d\u7b26\u5408\u7684\u7ed3\u679c\n\n\nBad:\n\n\n\n\n\nGood:\n\n\n\n\n\n\u6807\u8bb0\u533a\u5206\n\n\ndef prime(n):\n    for i in range(2, n-1):\n        if n % i == 0:\n            return i\n    return -1\n\n\n\n\ndef prime(n):\n    for i in range(2, n-1):\n        if n % i == 0:\n            break\n    else:\n        return -1\n    return i\n\n\n\n\n\u5b57\u5178\n\n\nBad:\n\n\nt = {}\nt['a'] = {}\nt['a']['b'] = 1 \nt['c'] = 1\nt['d'] = {}\nt['d']['e'] = {}\nt['d']['e']['f'] = 10\n\n\n\n\nGood:\n\n\nfrom collections import defaultdict\n\ntree = lambda: defaultdict(tree)\nt = tree()\nt['a']['b'] = 1\nt['c'] = 1\nt['d']['e']['f'] = 10\n\n\n\n\n\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\n\n\n\u6587\u4ef6\n\n\nBad:\n\n\nf = open('tmp/a', 'a')\nf.write('hello world')\nf.close()\n\n\n\n\nGood:\n\n\nwith open('/tmp/a', 'a') as f:\n    f.write('hello world')\n\n\n\n\nBad:\n\n\nclass OpenContext(object):\n    def __init__(self, filename, mode):\n        self.fp = open(filename, mode)\n\n    def __enter__(self):\n        return self.fp\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        self.fp.close()\n\nwith OpenContext('/tmp/a', 'a') as f:\n    f.write('hello world')\n\n\n\n\nGood:\n\n\nfrom contextlib import contextmanager\n\n@contextmanager\ndef make_open_context(filename, mode):\n    fp = open(filename, mode)\n    try:\n        yield fp\n    finally:\n        fp.close()\n\nwith make_open_context('/tmp/a', 'a') as f:\n    f.write('hello world')\n\n\n\n\n\u9501\n\n\n\u5f02\u5e38\n\n\n\u7f13\u5b58\n\n\ntotal_ordering\n\n\nfrom functools import total_ordering\n\n@total_ordering\nclass Size(object):\n    def __init__(self, value):\n        self.value = value\n\n    def __lt__(self, other):\n        return self.value \n other.value\n\n    def __eq__(self, other):\n        return self.value == other.value\n\n\n\n\ninspect\n\n\nimport inspect\n\ndef add(a, b=1):\n    return a + b\n\nprint inspect.getsourcelines(add)\nprint inspect.getargspec(add)\nprint inspect.getcallargs(add, 10, 2)\nprint inspect.isclass(add)\nprint inspect.isfunction(add)\n\n\n\n\nmixin\n\n\n\u5177\u4f53\u53ef\u53c2\u89c1\nPython mixin\u6a21\u5f0f\n\u3002\n\n\nBad:\n\n\nclass SimpleItemContainer(object):\n    def __init__(self, id, item_containers):\n        self.id = id\n        self.data = {}\n        for item in item_containers:\n            self.data[item.id] = item\n\n\n\n\nGood:\n\n\nfrom UserDict import DictMixin\n\nclass MyDict(DictMixin):\n    def __init__(self, dict=None, **kwargs):\n        self.data = {}\n        if dict is not None:\n            self.update(dict)\n        if len(kwargs):\n            self.update(kwargs)\n\n    def __getitem__(self, id):\n        return self.data[id]\n\n    def __setitem__(self, id, value):\n        self.data[id] = value\n\n    def __delitem__(self, id):\n        del self.data[id]\n\n    def keys(self):\n        return self.data.keys()\n\n\n\n\nfrom UserDict import DictMixin\n\nclass BetterSimpleItemContainer(object, DictMixin):\n    def __getitem__(self, id):\n        return self.data[id]\n\n    def __setitem__(self, id, value):\n        self.data[id] = value\n\n    def __del__(self, id):\n        del self.data[id]\n\n    def keys(self):\n        return self.data.keys()\n\n\n\n\nclass CommonEqualityMixin(object):\n    def __eq__(self, other):\n        return isinstance(other, self.__class__)\n                and self.__dict__ == other.__dict__\n\n    def __ne__(self, other):\n        return not self.__eq__(other)\n\nclass Foo(commonEqualityMixin):\n    def __init__(self, item):\n        self.item = item", 
            "title": "\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#_1", 
            "text": "Bad:  a = -1\nfor i in range(1, 10):\n    if not i % 4:\n        a = i\n        break  Good:  a = next((i for i in range(1, 10) if not i % 4), -1)", 
            "title": "\u76f4\u5230\u627e\u5230\u7b26\u5408\u7684\u7ed3\u679c"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#_2", 
            "text": "Bad:   Good:", 
            "title": "\u76f4\u5230\u51fa\u73b0\u4e0d\u7b26\u5408\u7684\u7ed3\u679c"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#_3", 
            "text": "def prime(n):\n    for i in range(2, n-1):\n        if n % i == 0:\n            return i\n    return -1  def prime(n):\n    for i in range(2, n-1):\n        if n % i == 0:\n            break\n    else:\n        return -1\n    return i", 
            "title": "\u6807\u8bb0\u533a\u5206"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#_4", 
            "text": "Bad:  t = {}\nt['a'] = {}\nt['a']['b'] = 1 \nt['c'] = 1\nt['d'] = {}\nt['d']['e'] = {}\nt['d']['e']['f'] = 10  Good:  from collections import defaultdict\n\ntree = lambda: defaultdict(tree)\nt = tree()\nt['a']['b'] = 1\nt['c'] = 1\nt['d']['e']['f'] = 10", 
            "title": "\u5b57\u5178"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#_5", 
            "text": "", 
            "title": "\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#_6", 
            "text": "Bad:  f = open('tmp/a', 'a')\nf.write('hello world')\nf.close()  Good:  with open('/tmp/a', 'a') as f:\n    f.write('hello world')  Bad:  class OpenContext(object):\n    def __init__(self, filename, mode):\n        self.fp = open(filename, mode)\n\n    def __enter__(self):\n        return self.fp\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        self.fp.close()\n\nwith OpenContext('/tmp/a', 'a') as f:\n    f.write('hello world')  Good:  from contextlib import contextmanager\n\n@contextmanager\ndef make_open_context(filename, mode):\n    fp = open(filename, mode)\n    try:\n        yield fp\n    finally:\n        fp.close()\n\nwith make_open_context('/tmp/a', 'a') as f:\n    f.write('hello world')", 
            "title": "\u6587\u4ef6"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#_7", 
            "text": "", 
            "title": "\u9501"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#_8", 
            "text": "", 
            "title": "\u5f02\u5e38"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#_9", 
            "text": "", 
            "title": "\u7f13\u5b58"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#total_ordering", 
            "text": "from functools import total_ordering\n\n@total_ordering\nclass Size(object):\n    def __init__(self, value):\n        self.value = value\n\n    def __lt__(self, other):\n        return self.value   other.value\n\n    def __eq__(self, other):\n        return self.value == other.value", 
            "title": "total_ordering"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#inspect", 
            "text": "import inspect\n\ndef add(a, b=1):\n    return a + b\n\nprint inspect.getsourcelines(add)\nprint inspect.getargspec(add)\nprint inspect.getcallargs(add, 10, 2)\nprint inspect.isclass(add)\nprint inspect.isfunction(add)", 
            "title": "inspect"
        }, 
        {
            "location": "/python_\u8463\u4f1f\u660e\u7684\u77e5\u4e4e\u56de\u7b54/#mixin", 
            "text": "\u5177\u4f53\u53ef\u53c2\u89c1 Python mixin\u6a21\u5f0f \u3002  Bad:  class SimpleItemContainer(object):\n    def __init__(self, id, item_containers):\n        self.id = id\n        self.data = {}\n        for item in item_containers:\n            self.data[item.id] = item  Good:  from UserDict import DictMixin\n\nclass MyDict(DictMixin):\n    def __init__(self, dict=None, **kwargs):\n        self.data = {}\n        if dict is not None:\n            self.update(dict)\n        if len(kwargs):\n            self.update(kwargs)\n\n    def __getitem__(self, id):\n        return self.data[id]\n\n    def __setitem__(self, id, value):\n        self.data[id] = value\n\n    def __delitem__(self, id):\n        del self.data[id]\n\n    def keys(self):\n        return self.data.keys()  from UserDict import DictMixin\n\nclass BetterSimpleItemContainer(object, DictMixin):\n    def __getitem__(self, id):\n        return self.data[id]\n\n    def __setitem__(self, id, value):\n        self.data[id] = value\n\n    def __del__(self, id):\n        del self.data[id]\n\n    def keys(self):\n        return self.data.keys()  class CommonEqualityMixin(object):\n    def __eq__(self, other):\n        return isinstance(other, self.__class__)\n                and self.__dict__ == other.__dict__\n\n    def __ne__(self, other):\n        return not self.__eq__(other)\n\nclass Foo(commonEqualityMixin):\n    def __init__(self, item):\n        self.item = item", 
            "title": "mixin"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/", 
            "text": "\ufeff\u6574\u7406\u4e86\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54\u3002\n\n\n\n\n\u600e\u4e48\u6837\u624d\u7b97\u662f\u7cbe\u901aPython\n\n\n\u600e\u6837\u624d\u80fd\u5199\u51fapythonic\u7684\u4ee3\u7801\n\n\nPython\u6709\u54ea\u4e9b\u4f18\u96c5\u7684\u4ee3\u7801\u5b9e\u73b0\n\n\n\n\npython\u4e4b\u7985\n\n\n import this\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n\n\n\n\n\u5207\u7247\n\n\n\u5207\u7247\u64cd\u4f5c\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u6b65\u957f\u3002\n\n\n L = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n L[2:-2]\n[3, 4, 5, 6, 7]\n\n L[-2:2] # \u8868\u793aL[-2:2:1]\n[]\n\n L[-2:2:-1]\n[8, 7, 6, 5, 4]\n\n\n\n\n\u5217\u8868\u63a8\u5bfc\u5f0f\n\n\n [i*i for i in range(1, 21) if i% 2 == 0]\n[4, 16, 36, 64, 100, 144, 196, 256, 324, 400] # \u5217\u8868\n\n {i*i for i in range(1, 21) if i% 2 == 0}\nset([64, 144, 36, 100, 324, 256, 16, 400, 196, 4]) # \u96c6\u5408\n\n {i:i*i for i in range(1, 21) if i% 2 == 0}\n{2: 4, 4: 16, 6: 36, 8: 64, 10: 100, 12: 144, 14: 196, 16: 256, 18: 324, 20: 400} # \u5b57\u5178\n\n\n [item for item in os.listdir(os.path.expanduser('.')) if os.path.isfile(item)]\n\n [item for item in os.listdir(os.path.expanduser('.')) if os.path.isdir(item)]\n\n {item: os.path.realpath(item) for item in os.listdir(os.path.expanduser('.'))}\n\n\n\n\n\u5185\u7f6e\u51fd\u6570\n\n\n\n\nsum\n\n\nsort\n\n\nmax\n\n\nmin\n\n\nany\n\n\n\n\nany(...)\n    any(iterable) -\n bool\n\n    Return True if bool(x) is True for any x in the iterable.\n    If the iterable is empty, return False.\n\n\n\n\n\n\nall\n\n\n\n\nall(...)\n    all(iterable) -\n bool\n\n    Return True if bool(x) is True for all values x in the iterable.\n    If the iterable is empty, return True.\n\n\n\n\n\n\nenumerate\n\n\n\n\nL = [i*i for i in range(5)]\n\nfor index, data in enumerate(L):\n    print index + 1, ':', data\n\nfor index, data in enumerate(L,1):\n    print index, ':', data\n\n\n\n\n\n\nreversed\n\n\n\n\nL = [1, 2, 3, 4]\n\nfor item in L[::-1]:\n    print item\n\nfor item in reversed(L):\n    print item\n\n\n\n\n\u4ea4\u6362\n\n\nBad:\n\n\nt = a\na = b\nb = t\n\n\n\n\nGood:\n\n\na, b = b, a\n\n\n\n\n\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\n\n\nBad:\n\n\ntry:\n    f = open('/path/to/file', 'r')\n    print f.read()\nfinally:\n    if f:\n        f.close()\n\n\n\n\nGood:\n\n\nwith open('/path/to/file', 'r') as f:\n    print f.read()\n\n\n\n\n\u62a5\u9519\n\n\nBad:\n\n\nimport sys\nsys.stderr.write('It failed!')\nraise SystemExit(1)\n\n\n\n\nGood:\n\n\nraise SystemExit('It failed!')\n\n\n\n\n\u88c5\u9970\u5668\n\n\nBad:\n\n\nclass Store(object):\n    def get_food(self, username, food):\n        if username != 'admin':\n            raise Exception(\nThis user is not allowed to get food\n)\n        return self.storage.get(food)\n\n    def put_food(self, username, food):\n        if username != 'admin':\n            raise Exception(\nThis user is not allowed to put food\n)\n        self.storage.put(food)\n\n\n\n\nBetter:\n\n\ndef check_is_admin(username):\n    if username != 'admin':\n        raise Exception(\nThis user is not allowed to get food\n)\n\nclass Store(object):\n    def get_food(self, username, food):\n        check_is_admin(username)\n        return self.storage.get(food)\n\n    def put_food(self, username, food):\n        check_is_admin(username)\n        return self.storage.put(food)\n\n\n\n\nGood:\n\n\ndef check_is_admin(f):\n    def wrapper(*args, **kwargs):\n        if kwargs.get('username') != 'admin':\n            raise Exception(\nThis user is not allowed to get food\n)\n        return f(*arg, **kargs)\n    return wrapper\n\nclass Storage(object):\n    @check_is_admin\n    def get_food(self, username, food):\n        return self.storage.get(food)\n\n    @check_is_admin\n    def put_food(self, username, food):\n        return storage.put(food)\n\n\n\n\n\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\n\n\nBad:\n\n\ndef a():\n    return 'a'\n\ndef b():\n    return 'b'\n\ndef c():\n    return 'c'\n\ncmd = raw_input('\n ')\nif cmd == 'a':\n    print a()\nelif cmd == 'b':\n    print b()\nelif cmd == 'c':\n    print c()\nelse:\n    raise Exception('Action not found')\n\n\n\n\nGood:\n\n\nclass A:\n    def fetch_func(self, action):\n        func= getattr(self, action, None)\n        return func\n\n    def execute(self, action):\n        func= self.fetch_func(action)\n        if func is None:\n            return False\n        return func()\n\n    def a(self):\n        return 'a'\n\n    def b(self, msg):\n        return 'b'\n\n    def c(self, msg):\n        return 'c'\n\ni = A()\ncmd = raw_input('\n ')\nresult = i.execute(cmd)\nif result:\n    print result\nelse:\n    raise Exception('Action not found')", 
            "title": "\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#python", 
            "text": "import this\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!", 
            "title": "python\u4e4b\u7985"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_1", 
            "text": "\u5207\u7247\u64cd\u4f5c\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u6b65\u957f\u3002   L = [1, 2, 3, 4, 5, 6, 7, 8, 9]  L[2:-2]\n[3, 4, 5, 6, 7]  L[-2:2] # \u8868\u793aL[-2:2:1]\n[]  L[-2:2:-1]\n[8, 7, 6, 5, 4]", 
            "title": "\u5207\u7247"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_2", 
            "text": "[i*i for i in range(1, 21) if i% 2 == 0]\n[4, 16, 36, 64, 100, 144, 196, 256, 324, 400] # \u5217\u8868  {i*i for i in range(1, 21) if i% 2 == 0}\nset([64, 144, 36, 100, 324, 256, 16, 400, 196, 4]) # \u96c6\u5408  {i:i*i for i in range(1, 21) if i% 2 == 0}\n{2: 4, 4: 16, 6: 36, 8: 64, 10: 100, 12: 144, 14: 196, 16: 256, 18: 324, 20: 400} # \u5b57\u5178  [item for item in os.listdir(os.path.expanduser('.')) if os.path.isfile(item)]  [item for item in os.listdir(os.path.expanduser('.')) if os.path.isdir(item)]  {item: os.path.realpath(item) for item in os.listdir(os.path.expanduser('.'))}", 
            "title": "\u5217\u8868\u63a8\u5bfc\u5f0f"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_3", 
            "text": "sum  sort  max  min  any   any(...)\n    any(iterable) -  bool\n\n    Return True if bool(x) is True for any x in the iterable.\n    If the iterable is empty, return False.   all   all(...)\n    all(iterable) -  bool\n\n    Return True if bool(x) is True for all values x in the iterable.\n    If the iterable is empty, return True.   enumerate   L = [i*i for i in range(5)]\n\nfor index, data in enumerate(L):\n    print index + 1, ':', data\n\nfor index, data in enumerate(L,1):\n    print index, ':', data   reversed   L = [1, 2, 3, 4]\n\nfor item in L[::-1]:\n    print item\n\nfor item in reversed(L):\n    print item", 
            "title": "\u5185\u7f6e\u51fd\u6570"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_4", 
            "text": "Bad:  t = a\na = b\nb = t  Good:  a, b = b, a", 
            "title": "\u4ea4\u6362"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_5", 
            "text": "Bad:  try:\n    f = open('/path/to/file', 'r')\n    print f.read()\nfinally:\n    if f:\n        f.close()  Good:  with open('/path/to/file', 'r') as f:\n    print f.read()", 
            "title": "\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_6", 
            "text": "Bad:  import sys\nsys.stderr.write('It failed!')\nraise SystemExit(1)  Good:  raise SystemExit('It failed!')", 
            "title": "\u62a5\u9519"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_7", 
            "text": "Bad:  class Store(object):\n    def get_food(self, username, food):\n        if username != 'admin':\n            raise Exception( This user is not allowed to get food )\n        return self.storage.get(food)\n\n    def put_food(self, username, food):\n        if username != 'admin':\n            raise Exception( This user is not allowed to put food )\n        self.storage.put(food)  Better:  def check_is_admin(username):\n    if username != 'admin':\n        raise Exception( This user is not allowed to get food )\n\nclass Store(object):\n    def get_food(self, username, food):\n        check_is_admin(username)\n        return self.storage.get(food)\n\n    def put_food(self, username, food):\n        check_is_admin(username)\n        return self.storage.put(food)  Good:  def check_is_admin(f):\n    def wrapper(*args, **kwargs):\n        if kwargs.get('username') != 'admin':\n            raise Exception( This user is not allowed to get food )\n        return f(*arg, **kargs)\n    return wrapper\n\nclass Storage(object):\n    @check_is_admin\n    def get_food(self, username, food):\n        return self.storage.get(food)\n\n    @check_is_admin\n    def put_food(self, username, food):\n        return storage.put(food)", 
            "title": "\u88c5\u9970\u5668"
        }, 
        {
            "location": "/python_\u8d56\u660e\u661f\u7684\u77e5\u4e4e\u56de\u7b54/#_8", 
            "text": "Bad:  def a():\n    return 'a'\n\ndef b():\n    return 'b'\n\ndef c():\n    return 'c'\n\ncmd = raw_input('  ')\nif cmd == 'a':\n    print a()\nelif cmd == 'b':\n    print b()\nelif cmd == 'c':\n    print c()\nelse:\n    raise Exception('Action not found')  Good:  class A:\n    def fetch_func(self, action):\n        func= getattr(self, action, None)\n        return func\n\n    def execute(self, action):\n        func= self.fetch_func(action)\n        if func is None:\n            return False\n        return func()\n\n    def a(self):\n        return 'a'\n\n    def b(self, msg):\n        return 'b'\n\n    def c(self, msg):\n        return 'c'\n\ni = A()\ncmd = raw_input('  ')\nresult = i.execute(cmd)\nif result:\n    print result\nelse:\n    raise Exception('Action not found')", 
            "title": "\u52a8\u6001\u7c7b\u578b\u8bed\u8a00"
        }, 
        {
            "location": "/c_c/", 
            "text": "\ufeffc\u8bed\u8a00\u7531Thompson\u548cRitchie\u5f00\u53d1\u3002\n\n\n\u6807\u51c6\n\n\n\n\n1989\u5e74\uff0cANSI\u53d1\u5e03\u4e86ANSI C\uff0c\u5b9a\u4e49\u4e86\u8bed\u8a00\u548c\u6807\u51c6\u5e93\uff0c\u79f0\u4e3aC89\u3002\n\n\n1990\u5e74\uff0cISO\u53d1\u5e03\u4e86C90\u3002\n\n\n1999\u5e74\uff0cISO\u53d1\u5e03\u4e86C99\u3002\n\n\n2011\u5e74\uff0cISO\u53d1\u5e03\u4e86C11\u3002\n\n\n\n\n\u7f16\u8bd1\u5668\n\n\nc\u7684\u7f16\u8bd1\u5668\u4e3b\u8981\u6709\n\n\n\n\ngcc\uff1aGNU\n\n\ncl\uff1aMicrosoft\n\n\nclang\n\n\n\n\nUNIX\n\n\nUNIX\u81ea\u5e26\u7f16\u8bd1\u5668cc\uff0c\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u7684\u4efb\u4f55\u4e00\u79cd\u3002\n\n\nLinux\n\n\nLinux\u81ea\u5e26\u7f16\u8bd1\u5668gcc\uff0c\u4e0b\u9762\u8bf4\u4e00\u4e0b\u6ce8\u610f\u4e8b\u9879\n\n\n\n\n\u540e\u7f00c\n\n\n\u547d\u4ee4\n\n\n\n\ncc/gcc/g++ test.c # \u751f\u6210a.out\n./a.out           # \u8fd0\u884c\n\ncc/gcc/g++ -o test test.c # \u751f\u6210test\n./test                    # \u8fd0\u884c\n\n\n\n\n\n\n\u67e5\u770bmain\u51fd\u6570\u4e2d\u7684return\n\n\n\n\necho $?\n\n\n\n\nWindows\n\n\nWindows\u65e0\u81ea\u5e26\u7f16\u8bd1\u5668\uff0c\u63a8\u8350\u4f7f\u7528vc\uff0cvs\u7b49ide\uff0c\u63d0\u4f9b\u7f16\u8bd1\u5668cl\uff0c\u4f46\u7531\u4e8e\u4f53\u79ef\u8fc7\u5927\uff0c\u672c\u4eba\u5e76\u6ca1\u6709\u5b89\u88c5\u3002\n\n\n\u672c\u4eba\u5b89\u88c5\u4e86MinGW+Notepad++\uff0c\u5373\u4f7f\u7528gcc\uff0c\u4e0b\u9762\u662f\u6ce8\u610f\u4e8b\u9879\n\n\n\n\n\u540e\u7f00c\n\n\n\u547d\u4ee4\n\n\n\n\ngcc/g++ test.c # \u751f\u6210a.exe\na/a.exe        # \u8fd0\u884c\n\ngcc/g++ -o test test.c # \u751f\u6210test.exe\ntest/test.exe          # \u8fd0\u884c\n\n\n\n\n\n\n\u67e5\u770bmain\u51fd\u6570\u4e2d\u7684return\n\n\n\n\necho %ERRORLEVEL%\n\n\n\n\nMac\n\n\nMac\u65e0\u81ea\u5e26\u7f16\u8bd1\u5668\uff0c\u63a8\u8350\u4f7f\u7528\u96c6\u6210\u73af\u5883Xcode\uff0c\u5176\u63d0\u4f9b\u591a\u79cdc\u7f16\u8bd1\u5668\u3002", 
            "title": "c"
        }, 
        {
            "location": "/c_c/#_1", 
            "text": "1989\u5e74\uff0cANSI\u53d1\u5e03\u4e86ANSI C\uff0c\u5b9a\u4e49\u4e86\u8bed\u8a00\u548c\u6807\u51c6\u5e93\uff0c\u79f0\u4e3aC89\u3002  1990\u5e74\uff0cISO\u53d1\u5e03\u4e86C90\u3002  1999\u5e74\uff0cISO\u53d1\u5e03\u4e86C99\u3002  2011\u5e74\uff0cISO\u53d1\u5e03\u4e86C11\u3002", 
            "title": "\u6807\u51c6"
        }, 
        {
            "location": "/c_c/#_2", 
            "text": "c\u7684\u7f16\u8bd1\u5668\u4e3b\u8981\u6709   gcc\uff1aGNU  cl\uff1aMicrosoft  clang", 
            "title": "\u7f16\u8bd1\u5668"
        }, 
        {
            "location": "/c_c/#unix", 
            "text": "UNIX\u81ea\u5e26\u7f16\u8bd1\u5668cc\uff0c\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u7684\u4efb\u4f55\u4e00\u79cd\u3002", 
            "title": "UNIX"
        }, 
        {
            "location": "/c_c/#linux", 
            "text": "Linux\u81ea\u5e26\u7f16\u8bd1\u5668gcc\uff0c\u4e0b\u9762\u8bf4\u4e00\u4e0b\u6ce8\u610f\u4e8b\u9879   \u540e\u7f00c  \u547d\u4ee4   cc/gcc/g++ test.c # \u751f\u6210a.out\n./a.out           # \u8fd0\u884c\n\ncc/gcc/g++ -o test test.c # \u751f\u6210test\n./test                    # \u8fd0\u884c   \u67e5\u770bmain\u51fd\u6570\u4e2d\u7684return   echo $?", 
            "title": "Linux"
        }, 
        {
            "location": "/c_c/#windows", 
            "text": "Windows\u65e0\u81ea\u5e26\u7f16\u8bd1\u5668\uff0c\u63a8\u8350\u4f7f\u7528vc\uff0cvs\u7b49ide\uff0c\u63d0\u4f9b\u7f16\u8bd1\u5668cl\uff0c\u4f46\u7531\u4e8e\u4f53\u79ef\u8fc7\u5927\uff0c\u672c\u4eba\u5e76\u6ca1\u6709\u5b89\u88c5\u3002  \u672c\u4eba\u5b89\u88c5\u4e86MinGW+Notepad++\uff0c\u5373\u4f7f\u7528gcc\uff0c\u4e0b\u9762\u662f\u6ce8\u610f\u4e8b\u9879   \u540e\u7f00c  \u547d\u4ee4   gcc/g++ test.c # \u751f\u6210a.exe\na/a.exe        # \u8fd0\u884c\n\ngcc/g++ -o test test.c # \u751f\u6210test.exe\ntest/test.exe          # \u8fd0\u884c   \u67e5\u770bmain\u51fd\u6570\u4e2d\u7684return   echo %ERRORLEVEL%", 
            "title": "Windows"
        }, 
        {
            "location": "/c_c/#mac", 
            "text": "Mac\u65e0\u81ea\u5e26\u7f16\u8bd1\u5668\uff0c\u63a8\u8350\u4f7f\u7528\u96c6\u6210\u73af\u5883Xcode\uff0c\u5176\u63d0\u4f9b\u591a\u79cdc\u7f16\u8bd1\u5668\u3002", 
            "title": "Mac"
        }, 
        {
            "location": "/c++_c++/", 
            "text": "\ufeffc++\u662fc\u8bed\u8a00\u7684\u7ee7\u627f\uff0c\u7531Stroustrup\u5f00\u53d1\u3002\n\n\n\u6807\u51c6\n\n\n\u7f16\u8bd1\u5668\n\n\nc++\u7684\u7f16\u8bd1\u5668\u4e3b\u8981\u6709\n\n\n\n\ng++\uff1aGNU\n\n\ncl\uff1aMicrosoft\n\n\nclang\n\n\n\n\nUNIX\n\n\nUNIX\u81ea\u5e26\u7f16\u8bd1\u5668cc\uff0c \u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u7684\u4efb\u4f55\u4e00\u79cd\u3002\n\n\nLinux\n\n\nLinux\u81ea\u5e26\u7f16\u8bd1\u5668g++\uff0c\u4e0b\u9762\u8bf4\u4e00\u4e0b\u6ce8\u610f\u4e8b\u9879\n\n\n\n\n\u540e\u7f00cc\uff0ccp\uff0ccpp\uff0ccxx\uff0cC\n\n\n\u547d\u4ee4\n\n\n\n\ncc/gcc/g++ test.cc # \u751f\u6210a.out\n./a.out            # \u8fd0\u884c\n\ncc/gcc/g++ -o test test.cc # \u751f\u6210test\n./test                     # \u8fd0\u884c\n\n\n\n\n\n\n\u67e5\u770bmain\u51fd\u6570\u4e2d\u7684return\n\n\n\n\necho $?\n\n\n\n\nWindows\n\n\nWindows\u65e0\u81ea\u5e26\u7f16\u8bd1\u5668\uff0c\u63a8\u8350\u4f7f\u7528vc\uff0cvs\u7b49ide\uff0c\u63d0\u4f9b\u7f16\u8bd1\u5668cl\uff0c\u4f46\u7531\u4e8e\u4f53\u79ef\u8fc7\u5927\uff0c\u672c\u4eba\u5e76\u6ca1\u6709\u5b89\u88c5\u3002\n\n\n\u672c\u4eba\u5b89\u88c5\u4e86MinGW+Notepad++\uff0c\u5373\u4f7f\u7528gcc\uff0c\u4e0b\u9762\u662f\u6ce8\u610f\u4e8b\u9879\n\n\n\n\n\u540e\u7f00cc\uff0ccp\uff0ccpp\uff0ccxx\uff0cC\n\n\n\u547d\u4ee4\n\n\n\n\ngcc/g++ test.cc # \u751f\u6210a.exe\na/a.exe         # \u8fd0\u884c\n\ngcc/g++ -o test test.cc # \u751f\u6210test.exe\ntest/test.exe           # \u8fd0\u884c\n\n\n\n\n\n\n\u67e5\u770bmain\u51fd\u6570\u4e2d\u7684return\n\n\n\n\necho %ERRORLEVEL%\n\n\n\n\nMac\n\n\nMac\u65e0\u81ea\u5e26\u7f16\u8bd1\u5668\uff0c\u63a8\u8350\u4f7f\u7528\u96c6\u6210\u73af\u5883Xcode\uff0c\u5176\u63d0\u4f9b\u591a\u79cdc++\u7f16\u8bd1\u5668\u3002", 
            "title": "c++"
        }, 
        {
            "location": "/c++_c++/#_1", 
            "text": "", 
            "title": "\u6807\u51c6"
        }, 
        {
            "location": "/c++_c++/#_2", 
            "text": "c++\u7684\u7f16\u8bd1\u5668\u4e3b\u8981\u6709   g++\uff1aGNU  cl\uff1aMicrosoft  clang", 
            "title": "\u7f16\u8bd1\u5668"
        }, 
        {
            "location": "/c++_c++/#unix", 
            "text": "UNIX\u81ea\u5e26\u7f16\u8bd1\u5668cc\uff0c \u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u7684\u4efb\u4f55\u4e00\u79cd\u3002", 
            "title": "UNIX"
        }, 
        {
            "location": "/c++_c++/#linux", 
            "text": "Linux\u81ea\u5e26\u7f16\u8bd1\u5668g++\uff0c\u4e0b\u9762\u8bf4\u4e00\u4e0b\u6ce8\u610f\u4e8b\u9879   \u540e\u7f00cc\uff0ccp\uff0ccpp\uff0ccxx\uff0cC  \u547d\u4ee4   cc/gcc/g++ test.cc # \u751f\u6210a.out\n./a.out            # \u8fd0\u884c\n\ncc/gcc/g++ -o test test.cc # \u751f\u6210test\n./test                     # \u8fd0\u884c   \u67e5\u770bmain\u51fd\u6570\u4e2d\u7684return   echo $?", 
            "title": "Linux"
        }, 
        {
            "location": "/c++_c++/#windows", 
            "text": "Windows\u65e0\u81ea\u5e26\u7f16\u8bd1\u5668\uff0c\u63a8\u8350\u4f7f\u7528vc\uff0cvs\u7b49ide\uff0c\u63d0\u4f9b\u7f16\u8bd1\u5668cl\uff0c\u4f46\u7531\u4e8e\u4f53\u79ef\u8fc7\u5927\uff0c\u672c\u4eba\u5e76\u6ca1\u6709\u5b89\u88c5\u3002  \u672c\u4eba\u5b89\u88c5\u4e86MinGW+Notepad++\uff0c\u5373\u4f7f\u7528gcc\uff0c\u4e0b\u9762\u662f\u6ce8\u610f\u4e8b\u9879   \u540e\u7f00cc\uff0ccp\uff0ccpp\uff0ccxx\uff0cC  \u547d\u4ee4   gcc/g++ test.cc # \u751f\u6210a.exe\na/a.exe         # \u8fd0\u884c\n\ngcc/g++ -o test test.cc # \u751f\u6210test.exe\ntest/test.exe           # \u8fd0\u884c   \u67e5\u770bmain\u51fd\u6570\u4e2d\u7684return   echo %ERRORLEVEL%", 
            "title": "Windows"
        }, 
        {
            "location": "/c++_c++/#mac", 
            "text": "Mac\u65e0\u81ea\u5e26\u7f16\u8bd1\u5668\uff0c\u63a8\u8350\u4f7f\u7528\u96c6\u6210\u73af\u5883Xcode\uff0c\u5176\u63d0\u4f9b\u591a\u79cdc++\u7f16\u8bd1\u5668\u3002", 
            "title": "Mac"
        }, 
        {
            "location": "/c++_\u89c4\u8303/", 
            "text": "\ufeff\u4e0b\u9762\u6211\u4eec\u7814\u7a76\u4e00\u4e0bc++\u7684\u98ce\u683c\u89c4\u8303\u3002\n\n\nGoogle\u5f00\u6e90\u9879\u76ee\u98ce\u683c\u6307\u5357\n\n\nGoogle Style Guide\n\u662fGoogel\u4e3a\u4e00\u4e9b\u8bed\u8a00\u5b9a\u5236\u7684\u98ce\u683c\u89c4\u8303\uff0c\u6bd4\u5982c++\u3002", 
            "title": "\u89c4\u8303"
        }, 
        {
            "location": "/c++_\u89c4\u8303/#google", 
            "text": "Google Style Guide \u662fGoogel\u4e3a\u4e00\u4e9b\u8bed\u8a00\u5b9a\u5236\u7684\u98ce\u683c\u89c4\u8303\uff0c\u6bd4\u5982c++\u3002", 
            "title": "Google\u5f00\u6e90\u9879\u76ee\u98ce\u683c\u6307\u5357"
        }
    ]
}